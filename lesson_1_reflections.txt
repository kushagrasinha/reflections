How did viewing a diff between two versions of a file help you see the bug that was introduced?
If the version which worked as expected was changed to a version which didn't work as expected then the source of the unexpected change would be in the change made to the original code
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Having access to the history would help me identify the bugs precisely and code with more confidence as the i can restore any version from history.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Manuallu choosing commits allows you to make sense of each commit as a commit is made when a logical change in the code has happened. Where as automatically saved commits are helpful in cases where the programmer is forgetful
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Saving multiple files in one commit is helpful when the code in different files are dependent on each other.
How can you use the commands git log and git diff to view the history of files?
While in a git repository directory, git log prints out all the commits made with details. We can use the command git diff and pass any two commit IDs to print out the difference in the code in the form of what's added and what has been removed
How might using version control make you more confident to make changes that could break something?
Knowing that i can move revert back to the previous versions of my code gives me confidence to make changes without fear of losing the working code.
Now that you have your workspace set up, what do you want to try using Git for?
To learn javascript basics on Udacity